{"version":3,"file":"sticky-nav.directive.js","sources":["../../src/sticky-nav.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, Renderer2, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[ngStickyNav]'\n})\n\nexport class StickyNavDirective implements OnInit, OnDestroy {\n  private originalPosition: number;\n  private lastScroll: number = 0;\n  private isSticky: boolean = false;\n  private scrollSubscription: Subscription;\n  private wrapper: HTMLElement;\n  @Input('stickyClass') stickyClass: string;\n  @Input() stickyEnabled: boolean = true;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n\n  }\n\n  ngOnInit(): void {\n    this.scrollSubscription = fromEvent(window, 'scroll').subscribe(() => this.manageScrollEvent());\n  }\n\n  private manageScrollEvent(): void {\n    const scroll = window.pageYOffset;\n    if (\n      this.stickyEnabled &&\n      scroll > this.lastScroll &&\n      !this.isSticky &&\n      scroll >= this.elementRef.nativeElement.offsetTop\n    ) {\n      this.setSticky();\n    } else if (scroll < this.lastScroll && this.isSticky && scroll <= this.originalPosition) {\n      this.unsetSticky();\n    }\n    this.lastScroll = scroll;\n  }\n\n  private setSticky(): void {\n    this.isSticky = true;\n    this.originalPosition = this.elementRef.nativeElement.offsetTop;\n    this.wrapper = this.elementRef.nativeElement.cloneNode(true);\n    this.removeIds();\n    this.setStyle('position', 'fixed');\n    this.setStyle('top', '0');\n    this.addClass();\n    this.renderer.setStyle(this.wrapper, 'visibility', 'hidden');\n    this.elementRef.nativeElement.parentElement.insertBefore(this.wrapper, this.elementRef.nativeElement);\n  }\n  private removeIds() {\n    const {height: initHeight, width: initWidth} = this.wrapper.getBoundingClientRect();\n    Array.from(this.wrapper.querySelectorAll('*')).forEach(el => this.renderer.removeAttribute(el, 'id'));\n    const {height: postHeight, width: postWidth} = this.wrapper.getBoundingClientRect();\n    if (initWidth !== postWidth || initHeight !== postHeight) {\n      throw new Error(`Size mismatch between sticky element and clone - please ensure you aren't using IDs for styling.`);\n    }\n  }\n  private unsetSticky(): void {\n    this.isSticky = false;\n    this.originalPosition = 0;\n    this.elementRef.nativeElement.parentElement.removeChild(this.wrapper);\n    this.setStyle('position', 'static');\n    this.removeClass();\n  }\n\n  private setStyle(key: string, value: string): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, key, value);\n  }\n\n  private addClass(): void {\n    this.renderer.addClass(this.elementRef.nativeElement, this.stickyClass);\n  }\n  \n  private removeClass(): void {\n    this.renderer.removeClass(this.elementRef.nativeElement, this.stickyClass);\n  }\n\n  ngOnDestroy() {\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n    }\n  }\n}\n"]}