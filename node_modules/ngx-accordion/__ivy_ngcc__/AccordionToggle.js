"use strict";
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('./AccordionGroup');

var _c0 = ["*"];
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = require("@angular/core");
var AccordionGroup_1 = require("./AccordionGroup");
var AccordionToggle = (function () {
    function AccordionToggle(accordionGroup) {
        this.accordionGroup = accordionGroup;
    }
    AccordionToggle.prototype.onClick = function () {
        this.accordionGroup.toggle();
    };
AccordionToggle.ɵfac = function AccordionToggle_Factory(t) { return new (t || AccordionToggle)(ɵngcc0.ɵɵdirectiveInject(core_1.forwardRef(function () { return AccordionGroup_1.AccordionGroup; }), 1)); };
AccordionToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AccordionToggle, selectors: [["accordion-toggle"]], hostBindings: function AccordionToggle_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function AccordionToggle_click_HostBindingHandler() { return ctx.onClick(); });
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AccordionToggle_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccordionToggle, [{
        type: core_1.Component,
        args: [{
                selector: "accordion-toggle",
                template: "<ng-content></ng-content>"
            }]
    }], function () { return [{ type: ɵngcc1.AccordionGroup, decorators: [{
                type: core_1.Host
            }, {
                type: core_1.Inject,
                args: [core_1.forwardRef(function () { return AccordionGroup_1.AccordionGroup; })]
            }] }]; }, { onClick: [{
            type: core_1.HostListener,
            args: ["click"]
        }] }); })();
    return AccordionToggle;
}());
__decorate([
    core_1.HostListener("click"),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], AccordionToggle.prototype, "onClick", null);
AccordionToggle = __decorate([ __param(0, core_1.Host()), __param(0, core_1.Inject(core_1.forwardRef(function () { return AccordionGroup_1.AccordionGroup; }))),
    __metadata("design:paramtypes", [AccordionGroup_1.AccordionGroup])
], AccordionToggle);
exports.AccordionToggle = AccordionToggle;

//# sourceMappingURL=AccordionToggle.js.map