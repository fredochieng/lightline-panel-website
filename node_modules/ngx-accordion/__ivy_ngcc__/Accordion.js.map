{"version":3,"file":"Accordion.js","sources":["Accordion.js"],"names":[],"mappings":"AAAA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAMc;AACd;AACA","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar AccordionGroup_1 = require(\"./AccordionGroup\");\nvar Accordion = (function () {\n    function Accordion() {\n        this.closeOthers = true;\n        this.showArrows = false;\n        this.expandAll = false;\n    }\n    Accordion.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (this.expandAll) {\n            this.closeOthers = false;\n            this.oldGroups = this.groups.toArray();\n            this.oldGroups.forEach(function (group) {\n                group.openOnInitialization();\n            });\n            // we subscribe for changes, and if new groups are added we open them automatically\n            this.subscription = this.groups.changes.subscribe(function (change) {\n                var newGroups = _this.groups.toArray().filter(function (group) {\n                    return _this.oldGroups.indexOf(group) === -1;\n                });\n                newGroups.forEach(function (group) {\n                    group.openOnInitialization();\n                });\n                _this.oldGroups = _this.groups.toArray();\n            });\n        }\n    };\n    Accordion.prototype.ngOnDestroy = function () {\n        if (this.subscription)\n            this.subscription.unsubscribe();\n    };\n    Accordion.prototype.closeAll = function () {\n        this.groups.toArray().forEach(function (group) {\n            group.isOpened = false;\n        });\n    };\n    return Accordion;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Accordion.prototype, \"closeOthers\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Accordion.prototype, \"showArrows\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Accordion.prototype, \"expandAll\", void 0);\n__decorate([\n    core_1.ContentChildren(core_1.forwardRef(function () { return AccordionGroup_1.AccordionGroup; })),\n    __metadata(\"design:type\", core_1.QueryList)\n], Accordion.prototype, \"groups\", void 0);\nAccordion = __decorate([\n    core_1.Component({\n        selector: \"accordion\",\n        template: \"\\n<div class=\\\"panel-group\\\" role=\\\"tablist\\\" aria-multiselectable=\\\"true\\\">\\n    <ng-content></ng-content>\\n</div>\\n\"\n    })\n], Accordion);\nexports.Accordion = Accordion;\n"]}