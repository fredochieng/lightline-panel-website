{"ast":null,"code":"/**\n * @license ngx-smart-modal\n * MIT license\n */\nimport { ApplicationRef, ChangeDetectorRef, Component, ComponentFactoryResolver, EventEmitter, HostListener, Inject, Injectable, Injector, Input, NgModule, Output, PLATFORM_ID, Renderer2, TemplateRef, Type, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { CommonModule, DOCUMENT, isPlatformBrowser } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nconst _c0 = [\"nsmContent\"];\nconst _c1 = [\"nsmDialog\"];\nconst _c2 = [\"nsmOverlay\"];\nconst _c3 = [\"dynamicContent\"];\n\nfunction NgxSmartModalComponent_div_0_ng_template_7_Template(rf, ctx) {}\n\nfunction NgxSmartModalComponent_div_0_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxSmartModalComponent_div_0_button_10_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r7.close());\n    });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 11)(2, \"g\");\n    ɵngcc0.ɵɵelement(3, \"path\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"g\");\n    ɵngcc0.ɵɵelement(5, \"path\", 13);\n    ɵngcc0.ɵɵelementEnd()()();\n  }\n}\n\nconst _c4 = function (a0, a2) {\n  return {\n    \"transparent\": a0,\n    \"overlay\": true,\n    \"nsm-overlay-open\": a2\n  };\n};\n\nconst _c5 = function (a1, a2) {\n  return [\"nsm-dialog\", a1, a2];\n};\n\nfunction NgxSmartModalComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1, 2);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function NgxSmartModalComponent_div_0_Template_div_mousedown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r9.dismiss($event));\n    });\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3, 4)(4, \"div\", 5, 6)(6, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(7, NgxSmartModalComponent_div_0_ng_template_7_Template, 0, 0, \"ng-template\", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵprojection(9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(10, NgxSmartModalComponent_div_0_button_10_Template, 6, 0, \"button\", 9);\n    ɵngcc0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"z-index\", ctx_r0.visible ? ctx_r0.layerPosition - 1 : -1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(11, _c4, !ctx_r0.backdrop, ctx_r0.openedClass));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"z-index\", ctx_r0.visible ? ctx_r0.layerPosition : -1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(14, _c5, ctx_r0.customClass, ctx_r0.openedClass ? \"nsm-dialog-open\" : \"nsm-dialog-close\"));\n    ɵngcc0.ɵɵattribute(\"aria-hidden\", ctx_r0.openedClass ? false : true)(\"aria-label\", ctx_r0.ariaLabel)(\"aria-labelledby\", ctx_r0.ariaLabelledBy)(\"aria-describedby\", ctx_r0.ariaDescribedBy);\n    ɵngcc0.ɵɵadvance(8);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.closable);\n  }\n}\n\nconst _c6 = [\"*\"];\nconst NgxSmartModalConfig = {\n  bodyClassOpen: 'dialog-open',\n  prefixEvent: 'ngx-smart-modal.'\n};\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nclass NgxSmartModalComponent {\n  /**\n   * @param {?} _renderer\n   * @param {?} _changeDetectorRef\n   * @param {?} componentFactoryResolver\n   * @param {?} _document\n   * @param {?} _platformId\n   */\n  constructor(_renderer, _changeDetectorRef, componentFactoryResolver, _document, _platformId) {\n    this._renderer = _renderer;\n    this._changeDetectorRef = _changeDetectorRef;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this._document = _document;\n    this._platformId = _platformId;\n    this.closable = true;\n    this.escapable = true;\n    this.dismissable = true;\n    this.identifier = '';\n    this.customClass = 'nsm-dialog-animation-fade';\n    this.visible = false;\n    this.backdrop = true;\n    this.force = true;\n    this.hideDelay = 500;\n    this.autostart = false;\n    this.target = '';\n    this.ariaLabel = null;\n    this.ariaLabelledBy = null;\n    this.ariaDescribedBy = null;\n    this.refocus = true;\n    this.visibleChange = new EventEmitter();\n    this.onClose = new EventEmitter();\n    this.onCloseFinished = new EventEmitter();\n    this.onDismiss = new EventEmitter();\n    this.onDismissFinished = new EventEmitter();\n    this.onAnyCloseEvent = new EventEmitter();\n    this.onAnyCloseEventFinished = new EventEmitter();\n    this.onOpen = new EventEmitter();\n    this.onOpenFinished = new EventEmitter();\n    this.onEscape = new EventEmitter();\n    this.onDataAdded = new EventEmitter();\n    this.onDataRemoved = new EventEmitter();\n    this.layerPosition = 1041;\n    this.overlayVisible = false;\n    this.openedClass = false;\n    this.createFrom = 'html';\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    if (!this.identifier || !this.identifier.length) {\n      throw new Error('identifier field isn’t set. Please set one before calling <ngx-smart-modal> in a template.');\n    }\n\n    this._sendEvent('create');\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterViewInit() {\n    if (this.contentComponent) {\n      const\n      /** @type {?} */\n      factory = this.componentFactoryResolver.resolveComponentFactory(this.contentComponent);\n      this.createDynamicContent(this.dynamicContentContainer, factory);\n      this.dynamicContentContainer.changes.subscribe(contentViewContainers => {\n        this.createDynamicContent(contentViewContainers, factory);\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._sendEvent('delete');\n  }\n  /**\n   * Open the modal instance\n   *\n   * @param {?=} top open the modal top of all other\n   * @return {?} the modal component\n   */\n\n\n  open(top) {\n    this._sendEvent('open', {\n      top: top\n    });\n\n    return this;\n  }\n  /**\n   * Close the modal instance\n   *\n   * @return {?} the modal component\n   */\n\n\n  close() {\n    this._sendEvent('close');\n\n    return this;\n  }\n  /**\n   * Dismiss the modal instance\n   *\n   * @param {?} e the event sent by the browser\n   * @return {?} the modal component\n   */\n\n\n  dismiss(e) {\n    if (!this.dismissable || !e.target.classList.contains('overlay')) {\n      return this;\n    }\n\n    this._sendEvent('dismiss');\n\n    return this;\n  }\n  /**\n   * Toggle visibility of the modal instance\n   *\n   * @param {?=} top open the modal top of all other\n   * @return {?} the modal component\n   */\n\n\n  toggle(top) {\n    this._sendEvent('toggle', {\n      top: top\n    });\n\n    return this;\n  }\n  /**\n   * Add a custom class to the modal instance\n   *\n   * @param {?} className the class to add\n   * @return {?} the modal component\n   */\n\n\n  addCustomClass(className) {\n    if (!this.customClass.length) {\n      this.customClass = className;\n    } else {\n      this.customClass += ' ' + className;\n    }\n\n    return this;\n  }\n  /**\n   * Remove a custom class to the modal instance\n   *\n   * @param {?=} className the class to remove\n   * @return {?} the modal component\n   */\n\n\n  removeCustomClass(className) {\n    if (className) {\n      this.customClass = this.customClass.replace(className, '').trim();\n    } else {\n      this.customClass = '';\n    }\n\n    return this;\n  }\n  /**\n   * Returns the visibility state of the modal instance\n   * @return {?}\n   */\n\n\n  isVisible() {\n    return this.visible;\n  }\n  /**\n   * Checks if data is attached to the modal instance\n   * @return {?}\n   */\n\n\n  hasData() {\n    return this._data !== undefined;\n  }\n  /**\n   * Attach data to the modal instance\n   *\n   * @param {?} data the data to attach\n   * @param {?=} force override potentially attached data\n   * @return {?} the modal component\n   */\n\n\n  setData(data, force) {\n    if (!this.hasData() || this.hasData() && force) {\n      this._data = data;\n      this.onDataAdded.emit(this._data);\n      this.markForCheck();\n    }\n\n    return this;\n  }\n  /**\n   * Retrieve the data attached to the modal instance\n   * @return {?}\n   */\n\n\n  getData() {\n    return this._data;\n  }\n  /**\n   * Remove the data attached to the modal instance\n   *\n   * @return {?} the modal component\n   */\n\n\n  removeData() {\n    this._data = undefined;\n    this.onDataRemoved.emit(true);\n    this.markForCheck();\n    return this;\n  }\n  /**\n   * Add body class modal opened\n   *\n   * @return {?} the modal component\n   */\n\n\n  addBodyClass() {\n    this._renderer.addClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n\n    return this;\n  }\n  /**\n   * Add body class modal opened\n   *\n   * @return {?} the modal component\n   */\n\n\n  removeBodyClass() {\n    this._renderer.removeClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n\n    return this;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  markForCheck() {\n    try {\n      this._changeDetectorRef.detectChanges();\n    } catch (\n    /** @type {?} */\n    e) {}\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Listens for window resize event and recalculates modal instance position if it is element-relative\n   * @return {?}\n   */\n\n\n  targetPlacement() {\n    if (!this.isBrowser || !this.nsmDialog.length || !this.nsmContent.length || !this.nsmOverlay.length || !this.target) {\n      return false;\n    }\n\n    const\n    /** @type {?} */\n    targetElement = this._document.querySelector(this.target);\n\n    if (!targetElement) {\n      return false;\n    }\n\n    const\n    /** @type {?} */\n    targetElementRect = targetElement.getBoundingClientRect();\n    const\n    /** @type {?} */\n    bodyRect = this.nsmOverlay.first.nativeElement.getBoundingClientRect();\n    const\n    /** @type {?} */\n    nsmContentRect = this.nsmContent.first.nativeElement.getBoundingClientRect();\n    const\n    /** @type {?} */\n    nsmDialogRect = this.nsmDialog.first.nativeElement.getBoundingClientRect();\n    const\n    /** @type {?} */\n    marginLeft = parseInt(\n    /** @type {?} */\n    getComputedStyle(this.nsmContent.first.nativeElement).marginLeft, 10);\n    const\n    /** @type {?} */\n    marginTop = parseInt(\n    /** @type {?} */\n    getComputedStyle(this.nsmContent.first.nativeElement).marginTop, 10);\n    let\n    /** @type {?} */\n    offsetTop = targetElementRect.top - nsmDialogRect.top - (nsmContentRect.height - targetElementRect.height) / 2;\n    let\n    /** @type {?} */\n    offsetLeft = targetElementRect.left - nsmDialogRect.left - (nsmContentRect.width - targetElementRect.width) / 2;\n\n    if (offsetLeft + nsmDialogRect.left + nsmContentRect.width + marginLeft * 2 > bodyRect.width) {\n      offsetLeft = bodyRect.width - (nsmDialogRect.left + nsmContentRect.width) - marginLeft * 2;\n    } else if (offsetLeft + nsmDialogRect.left < 0) {\n      offsetLeft = -nsmDialogRect.left;\n    }\n\n    if (offsetTop + nsmDialogRect.top + nsmContentRect.height + marginTop > bodyRect.height) {\n      offsetTop = bodyRect.height - (nsmDialogRect.top + nsmContentRect.height) - marginTop;\n    }\n\n    this._renderer.setStyle(this.nsmContent.first.nativeElement, 'top', (offsetTop < 0 ? 0 : offsetTop) + 'px');\n\n    this._renderer.setStyle(this.nsmContent.first.nativeElement, 'left', offsetLeft + 'px');\n  }\n  /**\n   * @param {?} name\n   * @param {?=} extraData\n   * @return {?}\n   */\n\n\n  _sendEvent(name, extraData) {\n    if (!this.isBrowser) {\n      return false;\n    }\n\n    const\n    /** @type {?} */\n    data = {\n      extraData: extraData,\n      instance: {\n        id: this.identifier,\n        modal: this\n      }\n    };\n    const\n    /** @type {?} */\n    event = new CustomEvent(NgxSmartModalConfig.prefixEvent + name, {\n      detail: data\n    });\n    return window.dispatchEvent(event);\n  }\n  /**\n   * Is current platform browser\n   * @return {?}\n   */\n\n\n  get isBrowser() {\n    return isPlatformBrowser(this._platformId);\n  }\n  /**\n   * Creates content inside provided ViewContainerRef\n   * @param {?} changes\n   * @param {?} factory\n   * @return {?}\n   */\n\n\n  createDynamicContent(changes, factory) {\n    changes.forEach(viewContainerRef => {\n      viewContainerRef.clear();\n      viewContainerRef.createComponent(factory);\n      this.markForCheck();\n    });\n  }\n\n}\n\nNgxSmartModalComponent.ɵfac = function NgxSmartModalComponent_Factory(t) {\n  return new (t || NgxSmartModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nNgxSmartModalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: NgxSmartModalComponent,\n  selectors: [[\"ngx-smart-modal\"]],\n  viewQuery: function NgxSmartModalComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n      ɵngcc0.ɵɵviewQuery(_c1, 5);\n      ɵngcc0.ɵɵviewQuery(_c2, 5);\n      ɵngcc0.ɵɵviewQuery(_c3, 5, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nsmContent = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nsmDialog = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nsmOverlay = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dynamicContentContainer = _t);\n    }\n  },\n  hostBindings: function NgxSmartModalComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"resize\", function NgxSmartModalComponent_resize_HostBindingHandler() {\n        return ctx.targetPlacement();\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    closable: \"closable\",\n    escapable: \"escapable\",\n    dismissable: \"dismissable\",\n    identifier: \"identifier\",\n    customClass: \"customClass\",\n    visible: \"visible\",\n    backdrop: \"backdrop\",\n    force: \"force\",\n    hideDelay: \"hideDelay\",\n    autostart: \"autostart\",\n    target: \"target\",\n    ariaLabel: \"ariaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    ariaDescribedBy: \"ariaDescribedBy\",\n    refocus: \"refocus\"\n  },\n  outputs: {\n    visibleChange: \"visibleChange\",\n    onClose: \"onClose\",\n    onCloseFinished: \"onCloseFinished\",\n    onDismiss: \"onDismiss\",\n    onDismissFinished: \"onDismissFinished\",\n    onAnyCloseEvent: \"onAnyCloseEvent\",\n    onAnyCloseEventFinished: \"onAnyCloseEventFinished\",\n    onOpen: \"onOpen\",\n    onOpenFinished: \"onOpenFinished\",\n    onEscape: \"onEscape\",\n    onDataAdded: \"onDataAdded\",\n    onDataRemoved: \"onDataRemoved\"\n  },\n  ngContentSelectors: _c6,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"z-index\", \"ngClass\", \"mousedown\", 4, \"ngIf\"], [3, \"ngClass\", \"mousedown\"], [\"nsmOverlay\", \"\"], [3, \"ngClass\"], [\"nsmDialog\", \"\"], [1, \"nsm-content\"], [\"nsmContent\", \"\"], [1, \"nsm-body\"], [\"dynamicContent\", \"\"], [\"type\", \"button\", \"aria-label\", \"Close\", \"class\", \"nsm-dialog-btn-close\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"nsm-dialog-btn-close\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"version\", \"1.1\", \"id\", \"Layer_1\", \"x\", \"0px\", \"y\", \"0px\", \"viewBox\", \"0 0 512 512\", 0, \"xml\", \"space\", \"preserve\", \"width\", \"16px\", \"height\", \"16px\"], [\"d\", \"M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249    C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306    C514.019,27.23,514.019,14.135,505.943,6.058z\", \"fill\", \"currentColor\"], [\"d\", \"M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636    c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z\", \"fill\", \"currentColor\"]],\n  template: function NgxSmartModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NgxSmartModalComponent_div_0_Template, 11, 17, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  dependencies: [ɵngcc1.NgClass, ɵngcc1.NgIf],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nNgxSmartModalComponent.ctorParameters = () => [{\n  type: Renderer2\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}];\n\nNgxSmartModalComponent.propDecorators = {\n  \"closable\": [{\n    type: Input\n  }],\n  \"escapable\": [{\n    type: Input\n  }],\n  \"dismissable\": [{\n    type: Input\n  }],\n  \"identifier\": [{\n    type: Input\n  }],\n  \"customClass\": [{\n    type: Input\n  }],\n  \"visible\": [{\n    type: Input\n  }],\n  \"backdrop\": [{\n    type: Input\n  }],\n  \"force\": [{\n    type: Input\n  }],\n  \"hideDelay\": [{\n    type: Input\n  }],\n  \"autostart\": [{\n    type: Input\n  }],\n  \"target\": [{\n    type: Input\n  }],\n  \"ariaLabel\": [{\n    type: Input\n  }],\n  \"ariaLabelledBy\": [{\n    type: Input\n  }],\n  \"ariaDescribedBy\": [{\n    type: Input\n  }],\n  \"refocus\": [{\n    type: Input\n  }],\n  \"visibleChange\": [{\n    type: Output\n  }],\n  \"onClose\": [{\n    type: Output\n  }],\n  \"onCloseFinished\": [{\n    type: Output\n  }],\n  \"onDismiss\": [{\n    type: Output\n  }],\n  \"onDismissFinished\": [{\n    type: Output\n  }],\n  \"onAnyCloseEvent\": [{\n    type: Output\n  }],\n  \"onAnyCloseEventFinished\": [{\n    type: Output\n  }],\n  \"onOpen\": [{\n    type: Output\n  }],\n  \"onOpenFinished\": [{\n    type: Output\n  }],\n  \"onEscape\": [{\n    type: Output\n  }],\n  \"onDataAdded\": [{\n    type: Output\n  }],\n  \"onDataRemoved\": [{\n    type: Output\n  }],\n  \"nsmContent\": [{\n    type: ViewChildren,\n    args: ['nsmContent']\n  }],\n  \"nsmDialog\": [{\n    type: ViewChildren,\n    args: ['nsmDialog']\n  }],\n  \"nsmOverlay\": [{\n    type: ViewChildren,\n    args: ['nsmOverlay']\n  }],\n  \"dynamicContentContainer\": [{\n    type: ViewChildren,\n    args: ['dynamicContent', {\n      read: ViewContainerRef\n    }]\n  }],\n  \"targetPlacement\": [{\n    type: HostListener,\n    args: ['window:resize']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSmartModalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-smart-modal',\n      template: `\n    <div *ngIf=\"overlayVisible\"\n         [style.z-index]=\"visible ? layerPosition-1 : -1\"\n         [ngClass]=\"{'transparent':!backdrop, 'overlay':true, 'nsm-overlay-open':openedClass}\"\n         (mousedown)=\"dismiss($event)\" #nsmOverlay>\n      <div [style.z-index]=\"visible ? layerPosition : -1\"\n           [ngClass]=\"['nsm-dialog', customClass, openedClass ? 'nsm-dialog-open': 'nsm-dialog-close']\" #nsmDialog\n           [attr.aria-hidden]=\"openedClass ? false : true\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledBy\"\n           [attr.aria-describedby]=\"ariaDescribedBy\">\n        <div class=\"nsm-content\" #nsmContent>\n          <div class=\"nsm-body\">\n            <ng-template #dynamicContent></ng-template>\n            <ng-content></ng-content>\n\n          </div>\n          <button type=\"button\" *ngIf=\"closable\" (click)=\"close()\" aria-label=\"Close\" class=\"nsm-dialog-btn-close\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"\n                 xml:space=\"preserve\" width=\"16px\" height=\"16px\">\n              <g>\n                <path d=\"M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249    C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306    C514.019,27.23,514.019,14.135,505.943,6.058z\"\n                      fill=\"currentColor\"/>\n              </g>\n              <g>\n                <path d=\"M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636    c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z\"\n                      fill=\"currentColor\"/>\n              </g>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    closable: [{\n      type: Input\n    }],\n    escapable: [{\n      type: Input\n    }],\n    dismissable: [{\n      type: Input\n    }],\n    identifier: [{\n      type: Input\n    }],\n    customClass: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    backdrop: [{\n      type: Input\n    }],\n    force: [{\n      type: Input\n    }],\n    hideDelay: [{\n      type: Input\n    }],\n    autostart: [{\n      type: Input\n    }],\n    target: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaDescribedBy: [{\n      type: Input\n    }],\n    refocus: [{\n      type: Input\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    onClose: [{\n      type: Output\n    }],\n    onCloseFinished: [{\n      type: Output\n    }],\n    onDismiss: [{\n      type: Output\n    }],\n    onDismissFinished: [{\n      type: Output\n    }],\n    onAnyCloseEvent: [{\n      type: Output\n    }],\n    onAnyCloseEventFinished: [{\n      type: Output\n    }],\n    onOpen: [{\n      type: Output\n    }],\n    onOpenFinished: [{\n      type: Output\n    }],\n    onEscape: [{\n      type: Output\n    }],\n    onDataAdded: [{\n      type: Output\n    }],\n    onDataRemoved: [{\n      type: Output\n    }],\n\n    /**\n     * Listens for window resize event and recalculates modal instance position if it is element-relative\n     * @return {?}\n     */\n    targetPlacement: [{\n      type: HostListener,\n      args: ['window:resize']\n    }],\n    nsmContent: [{\n      type: ViewChildren,\n      args: ['nsmContent']\n    }],\n    nsmDialog: [{\n      type: ViewChildren,\n      args: ['nsmDialog']\n    }],\n    nsmOverlay: [{\n      type: ViewChildren,\n      args: ['nsmOverlay']\n    }],\n    dynamicContentContainer: [{\n      type: ViewChildren,\n      args: ['dynamicContent', {\n        read: ViewContainerRef\n      }]\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass NgxSmartModalStackService {\n  constructor() {\n    this._modalStack = [];\n  }\n  /**\n   * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n   * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n   *\n   * @param {?} modalInstance The object that contains the given modal identifier and the modal itself.\n   * @param {?=} force Optional parameter that forces the overriding of modal instance if it already exists.\n   * @return {?} nothing special.\n   */\n\n\n  addModal(modalInstance, force) {\n    if (force) {\n      const\n      /** @type {?} */\n      i = this._modalStack.findIndex(o => o.id === modalInstance.id);\n\n      if (i > -1) {\n        this._modalStack[i].modal = modalInstance.modal;\n      } else {\n        this._modalStack.push(modalInstance);\n      }\n\n      return;\n    }\n\n    this._modalStack.push(modalInstance);\n  }\n  /**\n   * Retrieve a modal instance by its identifier.\n   *\n   * @param {?} id The modal identifier used at creation time.\n   * @return {?}\n   */\n\n\n  getModal(id) {\n    const\n    /** @type {?} */\n    i = this._modalStack.find(o => o.id === id);\n\n    if (i !== undefined) {\n      return i.modal;\n    } else {\n      throw new Error(`Cannot find modal with identifier ${id}`);\n    }\n  }\n  /**\n   * Retrieve all the created modals.\n   *\n   * @return {?} an array that contains all modal instances.\n   */\n\n\n  getModalStack() {\n    return this._modalStack;\n  }\n  /**\n   * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n   *\n   * @return {?} an array that contains all the opened modals.\n   */\n\n\n  getOpenedModals() {\n    return this._modalStack.filter(o => o.modal.visible);\n  }\n  /**\n   * Retrieve the opened modal with highest z-index.\n   *\n   * @return {?} the opened modal with highest z-index.\n   */\n\n\n  getTopOpenedModal() {\n    if (!this.getOpenedModals().length) {\n      throw new Error('No modal is opened');\n    }\n\n    return this.getOpenedModals().map(o => o.modal).reduce((highest, item) => item.layerPosition > highest.layerPosition ? item : highest, this.getOpenedModals()[0].modal);\n  }\n  /**\n   * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n   * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n   * Use it to make a modal appear foreground.\n   *\n   * @return {?} a higher index from all the existing modal instances.\n   */\n\n\n  getHigherIndex() {\n    return Math.max(...this._modalStack.map(o => o.modal.layerPosition), 1041) + 1;\n  }\n  /**\n   * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n   *\n   * @return {?} the number of modal instances.\n   */\n\n\n  getModalStackCount() {\n    return this._modalStack.length;\n  }\n  /**\n   * Remove a modal instance from the modal stack.\n   *\n   * @param {?} id The modal identifier.\n   * @return {?} the removed modal instance.\n   */\n\n\n  removeModal(id) {\n    const\n    /** @type {?} */\n    i = this._modalStack.findIndex(o => o.id === id);\n\n    if (i > -1) {\n      this._modalStack.splice(i, 1);\n    }\n  }\n\n}\n\nNgxSmartModalStackService.ɵfac = function NgxSmartModalStackService_Factory(t) {\n  return new (t || NgxSmartModalStackService)();\n};\n\nNgxSmartModalStackService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NgxSmartModalStackService,\n  factory: NgxSmartModalStackService.ɵfac\n});\n/** @nocollapse */\n\nNgxSmartModalStackService.ctorParameters = () => [];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSmartModalStackService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass NgxSmartModalService {\n  /**\n   * @param {?} _componentFactoryResolver\n   * @param {?} _appRef\n   * @param {?} _injector\n   * @param {?} _modalStack\n   * @param {?} applicationRef\n   * @param {?} _document\n   * @param {?} _platformId\n   */\n  constructor(_componentFactoryResolver, _appRef, _injector, _modalStack, applicationRef, _document, _platformId) {\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._modalStack = _modalStack;\n    this.applicationRef = applicationRef;\n    this._document = _document;\n    this._platformId = _platformId;\n    /**\n     * Close the latest opened modal if escape key event is emitted\n     * @param event The Keyboard Event\n     */\n\n    this._escapeKeyboardEvent = event => {\n      if (event.key === 'Escape') {\n        try {\n          const\n          /** @type {?} */\n          modal = this.getTopOpenedModal();\n\n          if (!modal.escapable) {\n            return false;\n          }\n\n          modal.onEscape.emit(modal);\n          this.closeLatestModal();\n          return true;\n        } catch (\n        /** @type {?} */\n        e) {\n          return false;\n        }\n      }\n\n      return false;\n    };\n    /**\n     * While modal is open, the focus stay on it\n     * @param event The Keyboar dEvent\n     */\n\n\n    this._trapFocusModal = event => {\n      if (event.key === 'Tab') {\n        try {\n          const\n          /** @type {?} */\n          modal = this.getTopOpenedModal();\n\n          if (!modal.nsmDialog.first.nativeElement.contains(document.activeElement)) {\n            event.preventDefault();\n            event.stopPropagation();\n            modal.nsmDialog.first.nativeElement.focus();\n          }\n\n          return true;\n        } catch (\n        /** @type {?} */\n        e) {\n          return false;\n        }\n      }\n\n      return false;\n    };\n\n    this._addEvents();\n  }\n  /**\n   * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n   * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n   *\n   * @param {?} modalInstance The object that contains the given modal identifier and the modal itself.\n   * @param {?=} force Optional parameter that forces the overriding of modal instance if it already exists.\n   * @return {?} nothing special.\n   */\n\n\n  addModal(modalInstance, force) {\n    this._modalStack.addModal(modalInstance, force);\n  }\n  /**\n   * Retrieve a modal instance by its identifier.\n   *\n   * @param {?} id The modal identifier used at creation time.\n   * @return {?}\n   */\n\n\n  getModal(id) {\n    return this._modalStack.getModal(id);\n  }\n  /**\n   * Alias of `getModal` to retrieve a modal instance by its identifier.\n   *\n   * @param {?} id The modal identifier used at creation time.\n   * @return {?}\n   */\n\n\n  get(id) {\n    return this.getModal(id);\n  }\n  /**\n   * Open a given modal\n   *\n   * @param {?} id The modal identifier used at creation time.\n   * @param {?=} force Tell the modal to open top of all other opened modals\n   * @return {?}\n   */\n\n\n  open(id, force = false) {\n    return this._openModal(this.get(id), force);\n  }\n  /**\n   * Close a given modal\n   *\n   * @param {?} id The modal identifier used at creation time.\n   * @return {?}\n   */\n\n\n  close(id) {\n    return this._closeModal(this.get(id));\n  }\n  /**\n   * Close all opened modals\n   * @return {?}\n   */\n\n\n  closeAll() {\n    this.getOpenedModals().forEach(instance => {\n      this._closeModal(instance.modal);\n    });\n  }\n  /**\n   * Toggles a given modal\n   * If the retrieved modal is opened it closes it, else it opens it.\n   *\n   * @param {?} id The modal identifier used at creation time.\n   * @param {?=} force Tell the modal to open top of all other opened modals\n   * @return {?}\n   */\n\n\n  toggle(id, force = false) {\n    return this._toggleModal(this.get(id), force);\n  }\n  /**\n   * Retrieve all the created modals.\n   *\n   * @return {?} an array that contains all modal instances.\n   */\n\n\n  getModalStack() {\n    return this._modalStack.getModalStack();\n  }\n  /**\n   * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n   *\n   * @return {?} an array that contains all the opened modals.\n   */\n\n\n  getOpenedModals() {\n    return this._modalStack.getOpenedModals();\n  }\n  /**\n   * Retrieve the opened modal with highest z-index.\n   *\n   * @return {?} the opened modal with highest z-index.\n   */\n\n\n  getTopOpenedModal() {\n    return this._modalStack.getTopOpenedModal();\n  }\n  /**\n   * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n   * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n   * Use it to make a modal appear foreground.\n   *\n   * @return {?} a higher index from all the existing modal instances.\n   */\n\n\n  getHigherIndex() {\n    return this._modalStack.getHigherIndex();\n  }\n  /**\n   * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n   *\n   * @return {?} the number of modal instances.\n   */\n\n\n  getModalStackCount() {\n    return this._modalStack.getModalStackCount();\n  }\n  /**\n   * Remove a modal instance from the modal stack.\n   *\n   * @param {?} id The modal identifier.\n   * @return {?} the removed modal instance.\n   */\n\n\n  removeModal(id) {\n    this._modalStack.removeModal(id);\n  }\n  /**\n   * Associate data to an identified modal. If the modal isn't already associated to some data, it creates a new\n   * entry in the `modalData` array with its `id` and the given `data`. If the modal already has data, it rewrites\n   * them with the new ones. Finally if no modal found it returns an error message in the console and false value\n   * as method output.\n   *\n   * @param {?} data The data you want to associate to the modal.\n   * @param {?} id The modal identifier.\n   * @param {?=} force If true, overrides the previous stored data if there was.\n   * @return {?} true if the given modal exists and the process has been tried, either false.\n   */\n\n\n  setModalData(data, id, force) {\n    let\n    /** @type {?} */\n    i;\n\n    if (i = this.get(id)) {\n      i.setData(data, force);\n      return true;\n    } else {\n      return false;\n    }\n  }\n  /**\n   * Retrieve modal data by its identifier.\n   *\n   * @param {?} id The modal identifier used at creation time.\n   * @return {?} the associated modal data.\n   */\n\n\n  getModalData(id) {\n    let\n    /** @type {?} */\n    i;\n\n    if (i = this.get(id)) {\n      return i.getData();\n    }\n\n    return null;\n  }\n  /**\n   * Reset the data attached to a given modal.\n   *\n   * @param {?} id The modal identifier used at creation time.\n   * @return {?} the removed data or false if modal doesn't exist.\n   */\n\n\n  resetModalData(id) {\n    if (!!this._modalStack.getModalStack().find(o => o.id === id)) {\n      const\n      /** @type {?} */\n      removed = this.getModal(id).getData();\n      this.getModal(id).removeData();\n      return removed;\n    } else {\n      return false;\n    }\n  }\n  /**\n   * Close the latest opened modal if it has been declared as escapable\n   * Using a debounce system because one or more modals could be listening\n   * escape key press event.\n   * @return {?}\n   */\n\n\n  closeLatestModal() {\n    this.getTopOpenedModal().close();\n  }\n  /**\n   * Create dynamic NgxSmartModalComponent\n   * @template T\n   * @param {?} id The modal identifier used at creation time.\n   * @param {?} content The modal content ( string, templateRef or Component )\n   * @param {?=} options\n   * @return {?}\n   */\n\n\n  create(id, content, options = {}) {\n    try {\n      return this.getModal(id);\n    } catch (\n    /** @type {?} */\n    e) {\n      const\n      /** @type {?} */\n      componentFactory = this._componentFactoryResolver.resolveComponentFactory(NgxSmartModalComponent);\n\n      const\n      /** @type {?} */\n      ngContent = this._resolveNgContent(content);\n\n      const\n      /** @type {?} */\n      componentRef = componentFactory.create(this._injector, ngContent);\n\n      if (content instanceof Type) {\n        componentRef.instance.contentComponent = content;\n      }\n\n      componentRef.instance.identifier = id;\n      componentRef.instance.createFrom = 'service';\n\n      if (typeof options.closable === 'boolean') {\n        componentRef.instance.closable = options.closable;\n      }\n\n      if (typeof options.escapable === 'boolean') {\n        componentRef.instance.escapable = options.escapable;\n      }\n\n      if (typeof options.dismissable === 'boolean') {\n        componentRef.instance.dismissable = options.dismissable;\n      }\n\n      if (typeof options.customClass === 'string') {\n        componentRef.instance.customClass = options.customClass;\n      }\n\n      if (typeof options.backdrop === 'boolean') {\n        componentRef.instance.backdrop = options.backdrop;\n      }\n\n      if (typeof options.force === 'boolean') {\n        componentRef.instance.force = options.force;\n      }\n\n      if (typeof options.hideDelay === 'number') {\n        componentRef.instance.hideDelay = options.hideDelay;\n      }\n\n      if (typeof options.autostart === 'boolean') {\n        componentRef.instance.autostart = options.autostart;\n      }\n\n      if (typeof options.target === 'string') {\n        componentRef.instance.target = options.target;\n      }\n\n      if (typeof options.ariaLabel === 'string') {\n        componentRef.instance.ariaLabel = options.ariaLabel;\n      }\n\n      if (typeof options.ariaLabelledBy === 'string') {\n        componentRef.instance.ariaLabelledBy = options.ariaLabelledBy;\n      }\n\n      if (typeof options.ariaDescribedBy === 'string') {\n        componentRef.instance.ariaDescribedBy = options.ariaDescribedBy;\n      }\n\n      if (typeof options.refocus === 'boolean') {\n        componentRef.instance.refocus = options.refocus;\n      }\n\n      this._appRef.attachView(componentRef.hostView);\n\n      const\n      /** @type {?} */\n      domElem =\n      /** @type {?} */\n\n      /** @type {?} */\n      componentRef.hostView.rootNodes[0];\n\n      this._document.body.appendChild(domElem);\n\n      return componentRef.instance;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _addEvents() {\n    if (!this.isBrowser) {\n      return false;\n    }\n\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'create',\n    /** @type {?} */\n    e => {\n      this._initModal(e.detail.instance);\n    });\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'delete',\n    /** @type {?} */\n    e => {\n      this._deleteModal(e.detail.instance);\n    });\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'open',\n    /** @type {?} */\n    e => {\n      this._openModal(e.detail.instance.modal, e.detail.top);\n    });\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'toggle',\n    /** @type {?} */\n    e => {\n      this._toggleModal(e.detail.instance.modal, e.detail.top);\n    });\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'close',\n    /** @type {?} */\n    e => {\n      this._closeModal(e.detail.instance.modal);\n    });\n    window.addEventListener(NgxSmartModalConfig.prefixEvent + 'dismiss',\n    /** @type {?} */\n    e => {\n      this._dismissModal(e.detail.instance.modal);\n    });\n    window.addEventListener('keyup', this._escapeKeyboardEvent);\n    return true;\n  }\n  /**\n   * @param {?} modalInstance\n   * @return {?}\n   */\n\n\n  _initModal(modalInstance) {\n    modalInstance.modal.layerPosition += this.getModalStackCount();\n    this.addModal(modalInstance, modalInstance.modal.force);\n\n    if (modalInstance.modal.autostart) {\n      this.open(modalInstance.id);\n    }\n  }\n  /**\n   * @param {?} modal\n   * @param {?=} top\n   * @return {?}\n   */\n\n\n  _openModal(modal, top) {\n    if (modal.visible) {\n      return false;\n    }\n\n    this.lastElementFocused = document.activeElement;\n\n    if (modal.escapable) {\n      window.addEventListener('keyup', this._escapeKeyboardEvent);\n    }\n\n    if (modal.backdrop) {\n      window.addEventListener('keydown', this._trapFocusModal);\n    }\n\n    if (top) {\n      modal.layerPosition = this.getHigherIndex();\n    }\n\n    modal.addBodyClass();\n    modal.overlayVisible = true;\n    modal.visible = true;\n    modal.onOpen.emit(modal);\n    modal.markForCheck();\n    setTimeout(() => {\n      modal.openedClass = true;\n\n      if (modal.target) {\n        modal.targetPlacement();\n      }\n\n      modal.nsmDialog.first.nativeElement.setAttribute('role', 'dialog');\n      modal.nsmDialog.first.nativeElement.setAttribute('tabIndex', '-1');\n      modal.nsmDialog.first.nativeElement.setAttribute('aria-modal', 'true');\n      modal.nsmDialog.first.nativeElement.focus();\n      modal.markForCheck();\n      modal.onOpenFinished.emit(modal);\n    });\n    return true;\n  }\n  /**\n   * @param {?} modal\n   * @param {?=} top\n   * @return {?}\n   */\n\n\n  _toggleModal(modal, top) {\n    if (modal.visible) {\n      return this._closeModal(modal);\n    } else {\n      return this._openModal(modal, top);\n    }\n  }\n  /**\n   * @param {?} modal\n   * @return {?}\n   */\n\n\n  _closeModal(modal) {\n    if (!modal.openedClass) {\n      return false;\n    }\n\n    modal.openedClass = false;\n    modal.onClose.emit(modal);\n    modal.onAnyCloseEvent.emit(modal);\n\n    if (this.getOpenedModals().length < 2) {\n      modal.removeBodyClass();\n      window.removeEventListener('keyup', this._escapeKeyboardEvent);\n      window.removeEventListener('keydown', this._trapFocusModal);\n    }\n\n    setTimeout(() => {\n      modal.visibleChange.emit(modal.visible);\n      modal.visible = false;\n      modal.overlayVisible = false;\n      modal.nsmDialog.first.nativeElement.removeAttribute('tabIndex');\n      modal.markForCheck();\n      modal.onCloseFinished.emit(modal);\n      modal.onAnyCloseEventFinished.emit(modal);\n\n      if (modal.refocus) {\n        this.lastElementFocused.focus();\n      }\n    }, modal.hideDelay);\n    return true;\n  }\n  /**\n   * @param {?} modal\n   * @return {?}\n   */\n\n\n  _dismissModal(modal) {\n    if (!modal.openedClass) {\n      return false;\n    }\n\n    modal.openedClass = false;\n    modal.onDismiss.emit(modal);\n    modal.onAnyCloseEvent.emit(modal);\n\n    if (this.getOpenedModals().length < 2) {\n      modal.removeBodyClass();\n    }\n\n    setTimeout(() => {\n      modal.visible = false;\n      modal.visibleChange.emit(modal.visible);\n      modal.overlayVisible = false;\n      modal.markForCheck();\n      modal.onDismissFinished.emit(modal);\n      modal.onAnyCloseEventFinished.emit(modal);\n    }, modal.hideDelay);\n    return true;\n  }\n  /**\n   * @param {?} modalInstance\n   * @return {?}\n   */\n\n\n  _deleteModal(modalInstance) {\n    this.removeModal(modalInstance.id);\n\n    if (!this.getModalStack().length) {\n      modalInstance.modal.removeBodyClass();\n    }\n  }\n  /**\n   * Resolve content according to the types\n   * @template T\n   * @param {?} content The modal content ( string, templateRef or Component )\n   * @return {?}\n   */\n\n\n  _resolveNgContent(content) {\n    if (typeof content === 'string') {\n      const\n      /** @type {?} */\n      element = this._document.createTextNode(content);\n\n      return [[element]];\n    }\n\n    if (content instanceof TemplateRef) {\n      const\n      /** @type {?} */\n      viewRef = content.createEmbeddedView(\n      /** @type {?} */\n      null);\n      this.applicationRef.attachView(viewRef);\n      return [viewRef.rootNodes];\n    }\n\n    return [];\n  }\n  /**\n   * Is current platform browser\n   * @return {?}\n   */\n\n\n  get isBrowser() {\n    return isPlatformBrowser(this._platformId);\n  }\n\n}\n\nNgxSmartModalService.ɵfac = function NgxSmartModalService_Factory(t) {\n  return new (t || NgxSmartModalService)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(NgxSmartModalStackService), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID));\n};\n\nNgxSmartModalService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NgxSmartModalService,\n  factory: NgxSmartModalService.ɵfac\n});\n/** @nocollapse */\n\nNgxSmartModalService.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}, {\n  type: ApplicationRef\n}, {\n  type: Injector\n}, {\n  type: NgxSmartModalStackService\n}, {\n  type: ApplicationRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSmartModalService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: NgxSmartModalStackService\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass NgxSmartModalModule {\n  /**\n   * @param {?} serivce\n   */\n  constructor(serivce) {\n    this.serivce = serivce;\n  }\n  /**\n   * Use in AppModule: new instance of NgxSmartModal.\n   * @return {?}\n   */\n\n\n  static forRoot() {\n    return {\n      ngModule: NgxSmartModalModule,\n      providers: [NgxSmartModalService, NgxSmartModalStackService]\n    };\n  }\n  /**\n   * Use in features modules with lazy loading: new instance of NgxSmartModal.\n   * @return {?}\n   */\n\n\n  static forChild() {\n    return {\n      ngModule: NgxSmartModalModule,\n      providers: [NgxSmartModalService, NgxSmartModalStackService]\n    };\n  }\n\n}\n\nNgxSmartModalModule.ɵfac = function NgxSmartModalModule_Factory(t) {\n  return new (t || NgxSmartModalModule)(ɵngcc0.ɵɵinject(NgxSmartModalService));\n};\n\nNgxSmartModalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgxSmartModalModule\n});\nNgxSmartModalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n/** @nocollapse */\n\nNgxSmartModalModule.ctorParameters = () => [{\n  type: NgxSmartModalService\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSmartModalModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxSmartModalComponent],\n      entryComponents: [NgxSmartModalComponent],\n      exports: [NgxSmartModalComponent],\n      imports: [CommonModule]\n    }]\n  }], function () {\n    return [{\n      type: NgxSmartModalService\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSmartModalModule, {\n    declarations: function () {\n      return [NgxSmartModalComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgxSmartModalComponent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Public classes.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgxSmartModalService, NgxSmartModalComponent, NgxSmartModalModule, NgxSmartModalConfig, NgxSmartModalStackService as ɵa };","map":{"version":3,"names":["ApplicationRef","ChangeDetectorRef","Component","ComponentFactoryResolver","EventEmitter","HostListener","Inject","Injectable","Injector","Input","NgModule","Output","PLATFORM_ID","Renderer2","TemplateRef","Type","ViewChildren","ViewContainerRef","CommonModule","DOCUMENT","isPlatformBrowser","ɵngcc0","ɵngcc1","_c0","_c1","_c2","_c3","NgxSmartModalComponent_div_0_ng_template_7_Template","rf","ctx","NgxSmartModalComponent_div_0_button_10_Template","_r8","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NgxSmartModalComponent_div_0_button_10_Template_button_click_0_listener","ɵɵrestoreView","ctx_r7","ɵɵnextContext","ɵɵresetView","close","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","_c4","a0","a2","_c5","a1","NgxSmartModalComponent_div_0_Template","_r10","NgxSmartModalComponent_div_0_Template_div_mousedown_0_listener","$event","ctx_r9","dismiss","ɵɵtemplate","ɵɵtemplateRefExtractor","ɵɵprojection","ctx_r0","ɵɵstyleProp","visible","layerPosition","ɵɵproperty","ɵɵpureFunction2","backdrop","openedClass","ɵɵadvance","customClass","ɵɵattribute","ariaLabel","ariaLabelledBy","ariaDescribedBy","closable","_c6","NgxSmartModalConfig","bodyClassOpen","prefixEvent","NgxSmartModalComponent","constructor","_renderer","_changeDetectorRef","componentFactoryResolver","_document","_platformId","escapable","dismissable","identifier","force","hideDelay","autostart","target","refocus","visibleChange","onClose","onCloseFinished","onDismiss","onDismissFinished","onAnyCloseEvent","onAnyCloseEventFinished","onOpen","onOpenFinished","onEscape","onDataAdded","onDataRemoved","overlayVisible","createFrom","ngOnInit","length","Error","_sendEvent","ngAfterViewInit","contentComponent","factory","resolveComponentFactory","createDynamicContent","dynamicContentContainer","changes","subscribe","contentViewContainers","ngOnDestroy","open","top","e","classList","contains","toggle","addCustomClass","className","removeCustomClass","replace","trim","isVisible","hasData","_data","undefined","setData","data","emit","markForCheck","getData","removeData","addBodyClass","addClass","body","removeBodyClass","removeClass","detectChanges","targetPlacement","isBrowser","nsmDialog","nsmContent","nsmOverlay","targetElement","querySelector","targetElementRect","getBoundingClientRect","bodyRect","first","nativeElement","nsmContentRect","nsmDialogRect","marginLeft","parseInt","getComputedStyle","marginTop","offsetTop","height","offsetLeft","left","width","setStyle","name","extraData","instance","id","modal","event","CustomEvent","detail","window","dispatchEvent","forEach","viewContainerRef","clear","createComponent","ɵfac","NgxSmartModalComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","NgxSmartModalComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostBindings","NgxSmartModalComponent_HostBindings","NgxSmartModalComponent_resize_HostBindingHandler","ɵɵresolveWindow","inputs","outputs","ngContentSelectors","decls","vars","consts","template","NgxSmartModalComponent_Template","ɵɵprojectionDef","dependencies","NgClass","NgIf","encapsulation","ctorParameters","decorators","args","propDecorators","read","ngDevMode","ɵsetClassMetadata","selector","NgxSmartModalStackService","_modalStack","addModal","modalInstance","i","findIndex","o","push","getModal","find","getModalStack","getOpenedModals","filter","getTopOpenedModal","map","reduce","highest","item","getHigherIndex","Math","max","getModalStackCount","removeModal","splice","NgxSmartModalStackService_Factory","ɵprov","ɵɵdefineInjectable","token","NgxSmartModalService","_componentFactoryResolver","_appRef","_injector","applicationRef","_escapeKeyboardEvent","key","closeLatestModal","_trapFocusModal","document","activeElement","preventDefault","stopPropagation","focus","_addEvents","get","_openModal","_closeModal","closeAll","_toggleModal","setModalData","getModalData","resetModalData","removed","create","content","options","componentFactory","ngContent","_resolveNgContent","componentRef","attachView","hostView","domElem","rootNodes","appendChild","addEventListener","_initModal","_deleteModal","_dismissModal","lastElementFocused","setTimeout","setAttribute","removeEventListener","removeAttribute","element","createTextNode","viewRef","createEmbeddedView","NgxSmartModalService_Factory","ɵɵinject","NgxSmartModalModule","serivce","forRoot","ngModule","providers","forChild","NgxSmartModalModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","entryComponents","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa"],"sources":["D:/Projects/Lightline/panel_site - Copy (2)/node_modules/ngx-smart-modal/__ivy_ngcc__/esm2015/ngx-smart-modal.js"],"sourcesContent":["/**\n * @license ngx-smart-modal\n * MIT license\n */\n\nimport { ApplicationRef, ChangeDetectorRef, Component, ComponentFactoryResolver, EventEmitter, HostListener, Inject, Injectable, Injector, Input, NgModule, Output, PLATFORM_ID, Renderer2, TemplateRef, Type, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { CommonModule, DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"nsmContent\"];\nconst _c1 = [\"nsmDialog\"];\nconst _c2 = [\"nsmOverlay\"];\nconst _c3 = [\"dynamicContent\"];\nfunction NgxSmartModalComponent_div_0_ng_template_7_Template(rf, ctx) { }\nfunction NgxSmartModalComponent_div_0_button_10_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxSmartModalComponent_div_0_button_10_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r7.close()); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 11)(2, \"g\");\n    ɵngcc0.ɵɵelement(3, \"path\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"g\");\n    ɵngcc0.ɵɵelement(5, \"path\", 13);\n    ɵngcc0.ɵɵelementEnd()()();\n} }\nconst _c4 = function (a0, a2) { return { \"transparent\": a0, \"overlay\": true, \"nsm-overlay-open\": a2 }; };\nconst _c5 = function (a1, a2) { return [\"nsm-dialog\", a1, a2]; };\nfunction NgxSmartModalComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1, 2);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function NgxSmartModalComponent_div_0_Template_div_mousedown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r9.dismiss($event)); });\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3, 4)(4, \"div\", 5, 6)(6, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(7, NgxSmartModalComponent_div_0_ng_template_7_Template, 0, 0, \"ng-template\", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵprojection(9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(10, NgxSmartModalComponent_div_0_button_10_Template, 6, 0, \"button\", 9);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"z-index\", ctx_r0.visible ? ctx_r0.layerPosition - 1 : -1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(11, _c4, !ctx_r0.backdrop, ctx_r0.openedClass));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"z-index\", ctx_r0.visible ? ctx_r0.layerPosition : -1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(14, _c5, ctx_r0.customClass, ctx_r0.openedClass ? \"nsm-dialog-open\" : \"nsm-dialog-close\"));\n    ɵngcc0.ɵɵattribute(\"aria-hidden\", ctx_r0.openedClass ? false : true)(\"aria-label\", ctx_r0.ariaLabel)(\"aria-labelledby\", ctx_r0.ariaLabelledBy)(\"aria-describedby\", ctx_r0.ariaDescribedBy);\n    ɵngcc0.ɵɵadvance(8);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.closable);\n} }\nconst _c6 = [\"*\"];\nconst NgxSmartModalConfig = {\n    bodyClassOpen: 'dialog-open',\n    prefixEvent: 'ngx-smart-modal.'\n};\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass NgxSmartModalComponent {\n    /**\n     * @param {?} _renderer\n     * @param {?} _changeDetectorRef\n     * @param {?} componentFactoryResolver\n     * @param {?} _document\n     * @param {?} _platformId\n     */\n    constructor(_renderer, _changeDetectorRef, componentFactoryResolver, _document, _platformId) {\n        this._renderer = _renderer;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this._document = _document;\n        this._platformId = _platformId;\n        this.closable = true;\n        this.escapable = true;\n        this.dismissable = true;\n        this.identifier = '';\n        this.customClass = 'nsm-dialog-animation-fade';\n        this.visible = false;\n        this.backdrop = true;\n        this.force = true;\n        this.hideDelay = 500;\n        this.autostart = false;\n        this.target = '';\n        this.ariaLabel = null;\n        this.ariaLabelledBy = null;\n        this.ariaDescribedBy = null;\n        this.refocus = true;\n        this.visibleChange = new EventEmitter();\n        this.onClose = new EventEmitter();\n        this.onCloseFinished = new EventEmitter();\n        this.onDismiss = new EventEmitter();\n        this.onDismissFinished = new EventEmitter();\n        this.onAnyCloseEvent = new EventEmitter();\n        this.onAnyCloseEventFinished = new EventEmitter();\n        this.onOpen = new EventEmitter();\n        this.onOpenFinished = new EventEmitter();\n        this.onEscape = new EventEmitter();\n        this.onDataAdded = new EventEmitter();\n        this.onDataRemoved = new EventEmitter();\n        this.layerPosition = 1041;\n        this.overlayVisible = false;\n        this.openedClass = false;\n        this.createFrom = 'html';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.identifier || !this.identifier.length) {\n            throw new Error('identifier field isn’t set. Please set one before calling <ngx-smart-modal> in a template.');\n        }\n        this._sendEvent('create');\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this.contentComponent) {\n            const /** @type {?} */ factory = this.componentFactoryResolver.resolveComponentFactory(this.contentComponent);\n            this.createDynamicContent(this.dynamicContentContainer, factory);\n            this.dynamicContentContainer.changes.subscribe((contentViewContainers) => {\n                this.createDynamicContent(contentViewContainers, factory);\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._sendEvent('delete');\n    }\n    /**\n     * Open the modal instance\n     *\n     * @param {?=} top open the modal top of all other\n     * @return {?} the modal component\n     */\n    open(top) {\n        this._sendEvent('open', { top: top });\n        return this;\n    }\n    /**\n     * Close the modal instance\n     *\n     * @return {?} the modal component\n     */\n    close() {\n        this._sendEvent('close');\n        return this;\n    }\n    /**\n     * Dismiss the modal instance\n     *\n     * @param {?} e the event sent by the browser\n     * @return {?} the modal component\n     */\n    dismiss(e) {\n        if (!this.dismissable || !e.target.classList.contains('overlay')) {\n            return this;\n        }\n        this._sendEvent('dismiss');\n        return this;\n    }\n    /**\n     * Toggle visibility of the modal instance\n     *\n     * @param {?=} top open the modal top of all other\n     * @return {?} the modal component\n     */\n    toggle(top) {\n        this._sendEvent('toggle', { top: top });\n        return this;\n    }\n    /**\n     * Add a custom class to the modal instance\n     *\n     * @param {?} className the class to add\n     * @return {?} the modal component\n     */\n    addCustomClass(className) {\n        if (!this.customClass.length) {\n            this.customClass = className;\n        }\n        else {\n            this.customClass += ' ' + className;\n        }\n        return this;\n    }\n    /**\n     * Remove a custom class to the modal instance\n     *\n     * @param {?=} className the class to remove\n     * @return {?} the modal component\n     */\n    removeCustomClass(className) {\n        if (className) {\n            this.customClass = this.customClass.replace(className, '').trim();\n        }\n        else {\n            this.customClass = '';\n        }\n        return this;\n    }\n    /**\n     * Returns the visibility state of the modal instance\n     * @return {?}\n     */\n    isVisible() {\n        return this.visible;\n    }\n    /**\n     * Checks if data is attached to the modal instance\n     * @return {?}\n     */\n    hasData() {\n        return this._data !== undefined;\n    }\n    /**\n     * Attach data to the modal instance\n     *\n     * @param {?} data the data to attach\n     * @param {?=} force override potentially attached data\n     * @return {?} the modal component\n     */\n    setData(data, force) {\n        if (!this.hasData() || (this.hasData() && force)) {\n            this._data = data;\n            this.onDataAdded.emit(this._data);\n            this.markForCheck();\n        }\n        return this;\n    }\n    /**\n     * Retrieve the data attached to the modal instance\n     * @return {?}\n     */\n    getData() {\n        return this._data;\n    }\n    /**\n     * Remove the data attached to the modal instance\n     *\n     * @return {?} the modal component\n     */\n    removeData() {\n        this._data = undefined;\n        this.onDataRemoved.emit(true);\n        this.markForCheck();\n        return this;\n    }\n    /**\n     * Add body class modal opened\n     *\n     * @return {?} the modal component\n     */\n    addBodyClass() {\n        this._renderer.addClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n        return this;\n    }\n    /**\n     * Add body class modal opened\n     *\n     * @return {?} the modal component\n     */\n    removeBodyClass() {\n        this._renderer.removeClass(this._document.body, NgxSmartModalConfig.bodyClassOpen);\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    markForCheck() {\n        try {\n            this._changeDetectorRef.detectChanges();\n        }\n        catch (/** @type {?} */ e) {\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Listens for window resize event and recalculates modal instance position if it is element-relative\n     * @return {?}\n     */\n    targetPlacement() {\n        if (!this.isBrowser || !this.nsmDialog.length || !this.nsmContent.length || !this.nsmOverlay.length || !this.target) {\n            return false;\n        }\n        const /** @type {?} */ targetElement = this._document.querySelector(this.target);\n        if (!targetElement) {\n            return false;\n        }\n        const /** @type {?} */ targetElementRect = targetElement.getBoundingClientRect();\n        const /** @type {?} */ bodyRect = this.nsmOverlay.first.nativeElement.getBoundingClientRect();\n        const /** @type {?} */ nsmContentRect = this.nsmContent.first.nativeElement.getBoundingClientRect();\n        const /** @type {?} */ nsmDialogRect = this.nsmDialog.first.nativeElement.getBoundingClientRect();\n        const /** @type {?} */ marginLeft = parseInt(/** @type {?} */ (getComputedStyle(this.nsmContent.first.nativeElement).marginLeft), 10);\n        const /** @type {?} */ marginTop = parseInt(/** @type {?} */ (getComputedStyle(this.nsmContent.first.nativeElement).marginTop), 10);\n        let /** @type {?} */ offsetTop = targetElementRect.top - nsmDialogRect.top - ((nsmContentRect.height - targetElementRect.height) / 2);\n        let /** @type {?} */ offsetLeft = targetElementRect.left - nsmDialogRect.left - ((nsmContentRect.width - targetElementRect.width) / 2);\n        if (offsetLeft + nsmDialogRect.left + nsmContentRect.width + (marginLeft * 2) > bodyRect.width) {\n            offsetLeft = bodyRect.width - (nsmDialogRect.left + nsmContentRect.width) - (marginLeft * 2);\n        }\n        else if (offsetLeft + nsmDialogRect.left < 0) {\n            offsetLeft = -nsmDialogRect.left;\n        }\n        if (offsetTop + nsmDialogRect.top + nsmContentRect.height + marginTop > bodyRect.height) {\n            offsetTop = bodyRect.height - (nsmDialogRect.top + nsmContentRect.height) - marginTop;\n        }\n        this._renderer.setStyle(this.nsmContent.first.nativeElement, 'top', (offsetTop < 0 ? 0 : offsetTop) + 'px');\n        this._renderer.setStyle(this.nsmContent.first.nativeElement, 'left', offsetLeft + 'px');\n    }\n    /**\n     * @param {?} name\n     * @param {?=} extraData\n     * @return {?}\n     */\n    _sendEvent(name, extraData) {\n        if (!this.isBrowser) {\n            return false;\n        }\n        const /** @type {?} */ data = {\n            extraData: extraData,\n            instance: { id: this.identifier, modal: this }\n        };\n        const /** @type {?} */ event = new CustomEvent(NgxSmartModalConfig.prefixEvent + name, { detail: data });\n        return window.dispatchEvent(event);\n    }\n    /**\n     * Is current platform browser\n     * @return {?}\n     */\n    get isBrowser() {\n        return isPlatformBrowser(this._platformId);\n    }\n    /**\n     * Creates content inside provided ViewContainerRef\n     * @param {?} changes\n     * @param {?} factory\n     * @return {?}\n     */\n    createDynamicContent(changes, factory) {\n        changes.forEach((viewContainerRef) => {\n            viewContainerRef.clear();\n            viewContainerRef.createComponent(factory);\n            this.markForCheck();\n        });\n    }\n}\nNgxSmartModalComponent.ɵfac = function NgxSmartModalComponent_Factory(t) { return new (t || NgxSmartModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nNgxSmartModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxSmartModalComponent, selectors: [[\"ngx-smart-modal\"]], viewQuery: function NgxSmartModalComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nsmContent = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nsmDialog = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nsmOverlay = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dynamicContentContainer = _t);\n    } }, hostBindings: function NgxSmartModalComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function NgxSmartModalComponent_resize_HostBindingHandler() { return ctx.targetPlacement(); }, false, ɵngcc0.ɵɵresolveWindow);\n    } }, inputs: { closable: \"closable\", escapable: \"escapable\", dismissable: \"dismissable\", identifier: \"identifier\", customClass: \"customClass\", visible: \"visible\", backdrop: \"backdrop\", force: \"force\", hideDelay: \"hideDelay\", autostart: \"autostart\", target: \"target\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", refocus: \"refocus\" }, outputs: { visibleChange: \"visibleChange\", onClose: \"onClose\", onCloseFinished: \"onCloseFinished\", onDismiss: \"onDismiss\", onDismissFinished: \"onDismissFinished\", onAnyCloseEvent: \"onAnyCloseEvent\", onAnyCloseEventFinished: \"onAnyCloseEventFinished\", onOpen: \"onOpen\", onOpenFinished: \"onOpenFinished\", onEscape: \"onEscape\", onDataAdded: \"onDataAdded\", onDataRemoved: \"onDataRemoved\" }, ngContentSelectors: _c6, decls: 1, vars: 1, consts: [[3, \"z-index\", \"ngClass\", \"mousedown\", 4, \"ngIf\"], [3, \"ngClass\", \"mousedown\"], [\"nsmOverlay\", \"\"], [3, \"ngClass\"], [\"nsmDialog\", \"\"], [1, \"nsm-content\"], [\"nsmContent\", \"\"], [1, \"nsm-body\"], [\"dynamicContent\", \"\"], [\"type\", \"button\", \"aria-label\", \"Close\", \"class\", \"nsm-dialog-btn-close\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"nsm-dialog-btn-close\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"version\", \"1.1\", \"id\", \"Layer_1\", \"x\", \"0px\", \"y\", \"0px\", \"viewBox\", \"0 0 512 512\", 0, \"xml\", \"space\", \"preserve\", \"width\", \"16px\", \"height\", \"16px\"], [\"d\", \"M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249    C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306    C514.019,27.23,514.019,14.135,505.943,6.058z\", \"fill\", \"currentColor\"], [\"d\", \"M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636    c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z\", \"fill\", \"currentColor\"]], template: function NgxSmartModalComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NgxSmartModalComponent_div_0_Template, 11, 17, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    } }, dependencies: [ɵngcc1.NgClass, ɵngcc1.NgIf], encapsulation: 2 });\n/** @nocollapse */\nNgxSmartModalComponent.ctorParameters = () => [\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n    { type: ComponentFactoryResolver, },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n];\nNgxSmartModalComponent.propDecorators = {\n    \"closable\": [{ type: Input },],\n    \"escapable\": [{ type: Input },],\n    \"dismissable\": [{ type: Input },],\n    \"identifier\": [{ type: Input },],\n    \"customClass\": [{ type: Input },],\n    \"visible\": [{ type: Input },],\n    \"backdrop\": [{ type: Input },],\n    \"force\": [{ type: Input },],\n    \"hideDelay\": [{ type: Input },],\n    \"autostart\": [{ type: Input },],\n    \"target\": [{ type: Input },],\n    \"ariaLabel\": [{ type: Input },],\n    \"ariaLabelledBy\": [{ type: Input },],\n    \"ariaDescribedBy\": [{ type: Input },],\n    \"refocus\": [{ type: Input },],\n    \"visibleChange\": [{ type: Output },],\n    \"onClose\": [{ type: Output },],\n    \"onCloseFinished\": [{ type: Output },],\n    \"onDismiss\": [{ type: Output },],\n    \"onDismissFinished\": [{ type: Output },],\n    \"onAnyCloseEvent\": [{ type: Output },],\n    \"onAnyCloseEventFinished\": [{ type: Output },],\n    \"onOpen\": [{ type: Output },],\n    \"onOpenFinished\": [{ type: Output },],\n    \"onEscape\": [{ type: Output },],\n    \"onDataAdded\": [{ type: Output },],\n    \"onDataRemoved\": [{ type: Output },],\n    \"nsmContent\": [{ type: ViewChildren, args: ['nsmContent',] },],\n    \"nsmDialog\": [{ type: ViewChildren, args: ['nsmDialog',] },],\n    \"nsmOverlay\": [{ type: ViewChildren, args: ['nsmOverlay',] },],\n    \"dynamicContentContainer\": [{ type: ViewChildren, args: ['dynamicContent', { read: ViewContainerRef },] },],\n    \"targetPlacement\": [{ type: HostListener, args: ['window:resize',] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSmartModalComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-smart-modal',\n                template: `\n    <div *ngIf=\"overlayVisible\"\n         [style.z-index]=\"visible ? layerPosition-1 : -1\"\n         [ngClass]=\"{'transparent':!backdrop, 'overlay':true, 'nsm-overlay-open':openedClass}\"\n         (mousedown)=\"dismiss($event)\" #nsmOverlay>\n      <div [style.z-index]=\"visible ? layerPosition : -1\"\n           [ngClass]=\"['nsm-dialog', customClass, openedClass ? 'nsm-dialog-open': 'nsm-dialog-close']\" #nsmDialog\n           [attr.aria-hidden]=\"openedClass ? false : true\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledBy\"\n           [attr.aria-describedby]=\"ariaDescribedBy\">\n        <div class=\"nsm-content\" #nsmContent>\n          <div class=\"nsm-body\">\n            <ng-template #dynamicContent></ng-template>\n            <ng-content></ng-content>\n\n          </div>\n          <button type=\"button\" *ngIf=\"closable\" (click)=\"close()\" aria-label=\"Close\" class=\"nsm-dialog-btn-close\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"\n                 xml:space=\"preserve\" width=\"16px\" height=\"16px\">\n              <g>\n                <path d=\"M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249    C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306    C514.019,27.23,514.019,14.135,505.943,6.058z\"\n                      fill=\"currentColor\"/>\n              </g>\n              <g>\n                <path d=\"M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636    c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z\"\n                      fill=\"currentColor\"/>\n              </g>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { closable: [{\n            type: Input\n        }], escapable: [{\n            type: Input\n        }], dismissable: [{\n            type: Input\n        }], identifier: [{\n            type: Input\n        }], customClass: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], backdrop: [{\n            type: Input\n        }], force: [{\n            type: Input\n        }], hideDelay: [{\n            type: Input\n        }], autostart: [{\n            type: Input\n        }], target: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input\n        }], ariaLabelledBy: [{\n            type: Input\n        }], ariaDescribedBy: [{\n            type: Input\n        }], refocus: [{\n            type: Input\n        }], visibleChange: [{\n            type: Output\n        }], onClose: [{\n            type: Output\n        }], onCloseFinished: [{\n            type: Output\n        }], onDismiss: [{\n            type: Output\n        }], onDismissFinished: [{\n            type: Output\n        }], onAnyCloseEvent: [{\n            type: Output\n        }], onAnyCloseEventFinished: [{\n            type: Output\n        }], onOpen: [{\n            type: Output\n        }], onOpenFinished: [{\n            type: Output\n        }], onEscape: [{\n            type: Output\n        }], onDataAdded: [{\n            type: Output\n        }], onDataRemoved: [{\n            type: Output\n        }], \n    /**\n     * Listens for window resize event and recalculates modal instance position if it is element-relative\n     * @return {?}\n     */\n    targetPlacement: [{\n            type: HostListener,\n            args: ['window:resize']\n        }], nsmContent: [{\n            type: ViewChildren,\n            args: ['nsmContent']\n        }], nsmDialog: [{\n            type: ViewChildren,\n            args: ['nsmDialog']\n        }], nsmOverlay: [{\n            type: ViewChildren,\n            args: ['nsmOverlay']\n        }], dynamicContentContainer: [{\n            type: ViewChildren,\n            args: ['dynamicContent', { read: ViewContainerRef }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass NgxSmartModalStackService {\n    constructor() {\n        this._modalStack = [];\n    }\n    /**\n     * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n     * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n     *\n     * @param {?} modalInstance The object that contains the given modal identifier and the modal itself.\n     * @param {?=} force Optional parameter that forces the overriding of modal instance if it already exists.\n     * @return {?} nothing special.\n     */\n    addModal(modalInstance, force) {\n        if (force) {\n            const /** @type {?} */ i = this._modalStack.findIndex((o) => o.id === modalInstance.id);\n            if (i > -1) {\n                this._modalStack[i].modal = modalInstance.modal;\n            }\n            else {\n                this._modalStack.push(modalInstance);\n            }\n            return;\n        }\n        this._modalStack.push(modalInstance);\n    }\n    /**\n     * Retrieve a modal instance by its identifier.\n     *\n     * @param {?} id The modal identifier used at creation time.\n     * @return {?}\n     */\n    getModal(id) {\n        const /** @type {?} */ i = this._modalStack.find((o) => o.id === id);\n        if (i !== undefined) {\n            return i.modal;\n        }\n        else {\n            throw new Error(`Cannot find modal with identifier ${id}`);\n        }\n    }\n    /**\n     * Retrieve all the created modals.\n     *\n     * @return {?} an array that contains all modal instances.\n     */\n    getModalStack() {\n        return this._modalStack;\n    }\n    /**\n     * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n     *\n     * @return {?} an array that contains all the opened modals.\n     */\n    getOpenedModals() {\n        return this._modalStack.filter((o) => o.modal.visible);\n    }\n    /**\n     * Retrieve the opened modal with highest z-index.\n     *\n     * @return {?} the opened modal with highest z-index.\n     */\n    getTopOpenedModal() {\n        if (!this.getOpenedModals().length) {\n            throw new Error('No modal is opened');\n        }\n        return this.getOpenedModals()\n            .map((o) => o.modal)\n            .reduce((highest, item) => item.layerPosition > highest.layerPosition ? item : highest, this.getOpenedModals()[0].modal);\n    }\n    /**\n     * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n     * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n     * Use it to make a modal appear foreground.\n     *\n     * @return {?} a higher index from all the existing modal instances.\n     */\n    getHigherIndex() {\n        return Math.max(...this._modalStack.map((o) => o.modal.layerPosition), 1041) + 1;\n    }\n    /**\n     * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n     *\n     * @return {?} the number of modal instances.\n     */\n    getModalStackCount() {\n        return this._modalStack.length;\n    }\n    /**\n     * Remove a modal instance from the modal stack.\n     *\n     * @param {?} id The modal identifier.\n     * @return {?} the removed modal instance.\n     */\n    removeModal(id) {\n        const /** @type {?} */ i = this._modalStack.findIndex((o) => o.id === id);\n        if (i > -1) {\n            this._modalStack.splice(i, 1);\n        }\n    }\n}\nNgxSmartModalStackService.ɵfac = function NgxSmartModalStackService_Factory(t) { return new (t || NgxSmartModalStackService)(); };\nNgxSmartModalStackService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NgxSmartModalStackService, factory: NgxSmartModalStackService.ɵfac });\n/** @nocollapse */\nNgxSmartModalStackService.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSmartModalStackService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass NgxSmartModalService {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _modalStack\n     * @param {?} applicationRef\n     * @param {?} _document\n     * @param {?} _platformId\n     */\n    constructor(_componentFactoryResolver, _appRef, _injector, _modalStack, applicationRef, _document, _platformId) {\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._modalStack = _modalStack;\n        this.applicationRef = applicationRef;\n        this._document = _document;\n        this._platformId = _platformId;\n        /**\n         * Close the latest opened modal if escape key event is emitted\n         * @param event The Keyboard Event\n         */\n        this._escapeKeyboardEvent = (event) => {\n            if (event.key === 'Escape') {\n                try {\n                    const /** @type {?} */ modal = this.getTopOpenedModal();\n                    if (!modal.escapable) {\n                        return false;\n                    }\n                    modal.onEscape.emit(modal);\n                    this.closeLatestModal();\n                    return true;\n                }\n                catch (/** @type {?} */ e) {\n                    return false;\n                }\n            }\n            return false;\n        };\n        /**\n         * While modal is open, the focus stay on it\n         * @param event The Keyboar dEvent\n         */\n        this._trapFocusModal = (event) => {\n            if (event.key === 'Tab') {\n                try {\n                    const /** @type {?} */ modal = this.getTopOpenedModal();\n                    if (!modal.nsmDialog.first.nativeElement.contains(document.activeElement)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        modal.nsmDialog.first.nativeElement.focus();\n                    }\n                    return true;\n                }\n                catch (/** @type {?} */ e) {\n                    return false;\n                }\n            }\n            return false;\n        };\n        this._addEvents();\n    }\n    /**\n     * Add a new modal instance. This step is essential and allows to retrieve any modal at any time.\n     * It stores an object that contains the given modal identifier and the modal itself directly in the `modalStack`.\n     *\n     * @param {?} modalInstance The object that contains the given modal identifier and the modal itself.\n     * @param {?=} force Optional parameter that forces the overriding of modal instance if it already exists.\n     * @return {?} nothing special.\n     */\n    addModal(modalInstance, force) {\n        this._modalStack.addModal(modalInstance, force);\n    }\n    /**\n     * Retrieve a modal instance by its identifier.\n     *\n     * @param {?} id The modal identifier used at creation time.\n     * @return {?}\n     */\n    getModal(id) {\n        return this._modalStack.getModal(id);\n    }\n    /**\n     * Alias of `getModal` to retrieve a modal instance by its identifier.\n     *\n     * @param {?} id The modal identifier used at creation time.\n     * @return {?}\n     */\n    get(id) {\n        return this.getModal(id);\n    }\n    /**\n     * Open a given modal\n     *\n     * @param {?} id The modal identifier used at creation time.\n     * @param {?=} force Tell the modal to open top of all other opened modals\n     * @return {?}\n     */\n    open(id, force = false) {\n        return this._openModal(this.get(id), force);\n    }\n    /**\n     * Close a given modal\n     *\n     * @param {?} id The modal identifier used at creation time.\n     * @return {?}\n     */\n    close(id) {\n        return this._closeModal(this.get(id));\n    }\n    /**\n     * Close all opened modals\n     * @return {?}\n     */\n    closeAll() {\n        this.getOpenedModals().forEach((instance) => {\n            this._closeModal(instance.modal);\n        });\n    }\n    /**\n     * Toggles a given modal\n     * If the retrieved modal is opened it closes it, else it opens it.\n     *\n     * @param {?} id The modal identifier used at creation time.\n     * @param {?=} force Tell the modal to open top of all other opened modals\n     * @return {?}\n     */\n    toggle(id, force = false) {\n        return this._toggleModal(this.get(id), force);\n    }\n    /**\n     * Retrieve all the created modals.\n     *\n     * @return {?} an array that contains all modal instances.\n     */\n    getModalStack() {\n        return this._modalStack.getModalStack();\n    }\n    /**\n     * Retrieve all the opened modals. It looks for all modal instances with their `visible` property set to `true`.\n     *\n     * @return {?} an array that contains all the opened modals.\n     */\n    getOpenedModals() {\n        return this._modalStack.getOpenedModals();\n    }\n    /**\n     * Retrieve the opened modal with highest z-index.\n     *\n     * @return {?} the opened modal with highest z-index.\n     */\n    getTopOpenedModal() {\n        return this._modalStack.getTopOpenedModal();\n    }\n    /**\n     * Get the higher `z-index` value between all the modal instances. It iterates over the `ModalStack` array and\n     * calculates a higher value (it takes the highest index value between all the modal instances and adds 1).\n     * Use it to make a modal appear foreground.\n     *\n     * @return {?} a higher index from all the existing modal instances.\n     */\n    getHigherIndex() {\n        return this._modalStack.getHigherIndex();\n    }\n    /**\n     * It gives the number of modal instances. It's helpful to know if the modal stack is empty or not.\n     *\n     * @return {?} the number of modal instances.\n     */\n    getModalStackCount() {\n        return this._modalStack.getModalStackCount();\n    }\n    /**\n     * Remove a modal instance from the modal stack.\n     *\n     * @param {?} id The modal identifier.\n     * @return {?} the removed modal instance.\n     */\n    removeModal(id) {\n        this._modalStack.removeModal(id);\n    }\n    /**\n     * Associate data to an identified modal. If the modal isn't already associated to some data, it creates a new\n     * entry in the `modalData` array with its `id` and the given `data`. If the modal already has data, it rewrites\n     * them with the new ones. Finally if no modal found it returns an error message in the console and false value\n     * as method output.\n     *\n     * @param {?} data The data you want to associate to the modal.\n     * @param {?} id The modal identifier.\n     * @param {?=} force If true, overrides the previous stored data if there was.\n     * @return {?} true if the given modal exists and the process has been tried, either false.\n     */\n    setModalData(data, id, force) {\n        let /** @type {?} */ i;\n        if (i = this.get(id)) {\n            i.setData(data, force);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Retrieve modal data by its identifier.\n     *\n     * @param {?} id The modal identifier used at creation time.\n     * @return {?} the associated modal data.\n     */\n    getModalData(id) {\n        let /** @type {?} */ i;\n        if (i = this.get(id)) {\n            return i.getData();\n        }\n        return null;\n    }\n    /**\n     * Reset the data attached to a given modal.\n     *\n     * @param {?} id The modal identifier used at creation time.\n     * @return {?} the removed data or false if modal doesn't exist.\n     */\n    resetModalData(id) {\n        if (!!this._modalStack.getModalStack().find((o) => o.id === id)) {\n            const /** @type {?} */ removed = this.getModal(id).getData();\n            this.getModal(id).removeData();\n            return removed;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Close the latest opened modal if it has been declared as escapable\n     * Using a debounce system because one or more modals could be listening\n     * escape key press event.\n     * @return {?}\n     */\n    closeLatestModal() {\n        this.getTopOpenedModal().close();\n    }\n    /**\n     * Create dynamic NgxSmartModalComponent\n     * @template T\n     * @param {?} id The modal identifier used at creation time.\n     * @param {?} content The modal content ( string, templateRef or Component )\n     * @param {?=} options\n     * @return {?}\n     */\n    create(id, content, options = {}) {\n        try {\n            return this.getModal(id);\n        }\n        catch (/** @type {?} */ e) {\n            const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(NgxSmartModalComponent);\n            const /** @type {?} */ ngContent = this._resolveNgContent(content);\n            const /** @type {?} */ componentRef = componentFactory.create(this._injector, ngContent);\n            if (content instanceof Type) {\n                componentRef.instance.contentComponent = content;\n            }\n            componentRef.instance.identifier = id;\n            componentRef.instance.createFrom = 'service';\n            if (typeof options.closable === 'boolean') {\n                componentRef.instance.closable = options.closable;\n            }\n            if (typeof options.escapable === 'boolean') {\n                componentRef.instance.escapable = options.escapable;\n            }\n            if (typeof options.dismissable === 'boolean') {\n                componentRef.instance.dismissable = options.dismissable;\n            }\n            if (typeof options.customClass === 'string') {\n                componentRef.instance.customClass = options.customClass;\n            }\n            if (typeof options.backdrop === 'boolean') {\n                componentRef.instance.backdrop = options.backdrop;\n            }\n            if (typeof options.force === 'boolean') {\n                componentRef.instance.force = options.force;\n            }\n            if (typeof options.hideDelay === 'number') {\n                componentRef.instance.hideDelay = options.hideDelay;\n            }\n            if (typeof options.autostart === 'boolean') {\n                componentRef.instance.autostart = options.autostart;\n            }\n            if (typeof options.target === 'string') {\n                componentRef.instance.target = options.target;\n            }\n            if (typeof options.ariaLabel === 'string') {\n                componentRef.instance.ariaLabel = options.ariaLabel;\n            }\n            if (typeof options.ariaLabelledBy === 'string') {\n                componentRef.instance.ariaLabelledBy = options.ariaLabelledBy;\n            }\n            if (typeof options.ariaDescribedBy === 'string') {\n                componentRef.instance.ariaDescribedBy = options.ariaDescribedBy;\n            }\n            if (typeof options.refocus === 'boolean') {\n                componentRef.instance.refocus = options.refocus;\n            }\n            this._appRef.attachView(componentRef.hostView);\n            const /** @type {?} */ domElem = /** @type {?} */ ((/** @type {?} */ (componentRef.hostView)).rootNodes[0]);\n            this._document.body.appendChild(domElem);\n            return componentRef.instance;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _addEvents() {\n        if (!this.isBrowser) {\n            return false;\n        }\n        window.addEventListener(NgxSmartModalConfig.prefixEvent + 'create', /** @type {?} */ (((e) => {\n            this._initModal(e.detail.instance);\n        })));\n        window.addEventListener(NgxSmartModalConfig.prefixEvent + 'delete', /** @type {?} */ (((e) => {\n            this._deleteModal(e.detail.instance);\n        })));\n        window.addEventListener(NgxSmartModalConfig.prefixEvent + 'open', /** @type {?} */ (((e) => {\n            this._openModal(e.detail.instance.modal, e.detail.top);\n        })));\n        window.addEventListener(NgxSmartModalConfig.prefixEvent + 'toggle', /** @type {?} */ (((e) => {\n            this._toggleModal(e.detail.instance.modal, e.detail.top);\n        })));\n        window.addEventListener(NgxSmartModalConfig.prefixEvent + 'close', /** @type {?} */ (((e) => {\n            this._closeModal(e.detail.instance.modal);\n        })));\n        window.addEventListener(NgxSmartModalConfig.prefixEvent + 'dismiss', /** @type {?} */ (((e) => {\n            this._dismissModal(e.detail.instance.modal);\n        })));\n        window.addEventListener('keyup', this._escapeKeyboardEvent);\n        return true;\n    }\n    /**\n     * @param {?} modalInstance\n     * @return {?}\n     */\n    _initModal(modalInstance) {\n        modalInstance.modal.layerPosition += this.getModalStackCount();\n        this.addModal(modalInstance, modalInstance.modal.force);\n        if (modalInstance.modal.autostart) {\n            this.open(modalInstance.id);\n        }\n    }\n    /**\n     * @param {?} modal\n     * @param {?=} top\n     * @return {?}\n     */\n    _openModal(modal, top) {\n        if (modal.visible) {\n            return false;\n        }\n        this.lastElementFocused = document.activeElement;\n        if (modal.escapable) {\n            window.addEventListener('keyup', this._escapeKeyboardEvent);\n        }\n        if (modal.backdrop) {\n            window.addEventListener('keydown', this._trapFocusModal);\n        }\n        if (top) {\n            modal.layerPosition = this.getHigherIndex();\n        }\n        modal.addBodyClass();\n        modal.overlayVisible = true;\n        modal.visible = true;\n        modal.onOpen.emit(modal);\n        modal.markForCheck();\n        setTimeout(() => {\n            modal.openedClass = true;\n            if (modal.target) {\n                modal.targetPlacement();\n            }\n            modal.nsmDialog.first.nativeElement.setAttribute('role', 'dialog');\n            modal.nsmDialog.first.nativeElement.setAttribute('tabIndex', '-1');\n            modal.nsmDialog.first.nativeElement.setAttribute('aria-modal', 'true');\n            modal.nsmDialog.first.nativeElement.focus();\n            modal.markForCheck();\n            modal.onOpenFinished.emit(modal);\n        });\n        return true;\n    }\n    /**\n     * @param {?} modal\n     * @param {?=} top\n     * @return {?}\n     */\n    _toggleModal(modal, top) {\n        if (modal.visible) {\n            return this._closeModal(modal);\n        }\n        else {\n            return this._openModal(modal, top);\n        }\n    }\n    /**\n     * @param {?} modal\n     * @return {?}\n     */\n    _closeModal(modal) {\n        if (!modal.openedClass) {\n            return false;\n        }\n        modal.openedClass = false;\n        modal.onClose.emit(modal);\n        modal.onAnyCloseEvent.emit(modal);\n        if (this.getOpenedModals().length < 2) {\n            modal.removeBodyClass();\n            window.removeEventListener('keyup', this._escapeKeyboardEvent);\n            window.removeEventListener('keydown', this._trapFocusModal);\n        }\n        setTimeout(() => {\n            modal.visibleChange.emit(modal.visible);\n            modal.visible = false;\n            modal.overlayVisible = false;\n            modal.nsmDialog.first.nativeElement.removeAttribute('tabIndex');\n            modal.markForCheck();\n            modal.onCloseFinished.emit(modal);\n            modal.onAnyCloseEventFinished.emit(modal);\n            if (modal.refocus) {\n                this.lastElementFocused.focus();\n            }\n        }, modal.hideDelay);\n        return true;\n    }\n    /**\n     * @param {?} modal\n     * @return {?}\n     */\n    _dismissModal(modal) {\n        if (!modal.openedClass) {\n            return false;\n        }\n        modal.openedClass = false;\n        modal.onDismiss.emit(modal);\n        modal.onAnyCloseEvent.emit(modal);\n        if (this.getOpenedModals().length < 2) {\n            modal.removeBodyClass();\n        }\n        setTimeout(() => {\n            modal.visible = false;\n            modal.visibleChange.emit(modal.visible);\n            modal.overlayVisible = false;\n            modal.markForCheck();\n            modal.onDismissFinished.emit(modal);\n            modal.onAnyCloseEventFinished.emit(modal);\n        }, modal.hideDelay);\n        return true;\n    }\n    /**\n     * @param {?} modalInstance\n     * @return {?}\n     */\n    _deleteModal(modalInstance) {\n        this.removeModal(modalInstance.id);\n        if (!this.getModalStack().length) {\n            modalInstance.modal.removeBodyClass();\n        }\n    }\n    /**\n     * Resolve content according to the types\n     * @template T\n     * @param {?} content The modal content ( string, templateRef or Component )\n     * @return {?}\n     */\n    _resolveNgContent(content) {\n        if (typeof content === 'string') {\n            const /** @type {?} */ element = this._document.createTextNode(content);\n            return [[element]];\n        }\n        if (content instanceof TemplateRef) {\n            const /** @type {?} */ viewRef = content.createEmbeddedView(/** @type {?} */ (null));\n            this.applicationRef.attachView(viewRef);\n            return [viewRef.rootNodes];\n        }\n        return [];\n    }\n    /**\n     * Is current platform browser\n     * @return {?}\n     */\n    get isBrowser() {\n        return isPlatformBrowser(this._platformId);\n    }\n}\nNgxSmartModalService.ɵfac = function NgxSmartModalService_Factory(t) { return new (t || NgxSmartModalService)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(NgxSmartModalStackService), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nNgxSmartModalService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NgxSmartModalService, factory: NgxSmartModalService.ɵfac });\n/** @nocollapse */\nNgxSmartModalService.ctorParameters = () => [\n    { type: ComponentFactoryResolver, },\n    { type: ApplicationRef, },\n    { type: Injector, },\n    { type: NgxSmartModalStackService, },\n    { type: ApplicationRef, },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSmartModalService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: NgxSmartModalStackService }, { type: ɵngcc0.ApplicationRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass NgxSmartModalModule {\n    /**\n     * @param {?} serivce\n     */\n    constructor(serivce) {\n        this.serivce = serivce;\n    }\n    /**\n     * Use in AppModule: new instance of NgxSmartModal.\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: NgxSmartModalModule,\n            providers: [\n                NgxSmartModalService,\n                NgxSmartModalStackService\n            ]\n        };\n    }\n    /**\n     * Use in features modules with lazy loading: new instance of NgxSmartModal.\n     * @return {?}\n     */\n    static forChild() {\n        return {\n            ngModule: NgxSmartModalModule,\n            providers: [\n                NgxSmartModalService,\n                NgxSmartModalStackService\n            ]\n        };\n    }\n}\nNgxSmartModalModule.ɵfac = function NgxSmartModalModule_Factory(t) { return new (t || NgxSmartModalModule)(ɵngcc0.ɵɵinject(NgxSmartModalService)); };\nNgxSmartModalModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxSmartModalModule });\nNgxSmartModalModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n/** @nocollapse */\nNgxSmartModalModule.ctorParameters = () => [\n    { type: NgxSmartModalService, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSmartModalModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxSmartModalComponent],\n                entryComponents: [NgxSmartModalComponent],\n                exports: [NgxSmartModalComponent],\n                imports: [CommonModule]\n            }]\n    }], function () { return [{ type: NgxSmartModalService }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSmartModalModule, { declarations: function () { return [NgxSmartModalComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxSmartModalComponent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Public classes.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxSmartModalService, NgxSmartModalComponent, NgxSmartModalModule, NgxSmartModalConfig, NgxSmartModalStackService as ɵa };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}